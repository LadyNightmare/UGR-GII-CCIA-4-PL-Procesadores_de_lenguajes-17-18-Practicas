//
// BABAD (Lenguaje C - Castellano - vector 1D y 2D - Funciones - Do-Until)
//

<Programa> ::= <Cabecera_programa> <bloque>

<bloque> ::= <Inicio_de_bloque> <Declar_de_variables_locales> <Declar_de_subprogs> <Sentencias> <Fin_de_bloque>

<Declar_de_subprogs> ::= <Declar_de_subprogs> <Declar_subprog>
        		|
<Declar_subprog> ::= <Cabecera_subprograma> <bloque>

<Declar_de_variables_locales> ::= <Marca_ini_declar_variables> <Variables_locales> <Marca_fin_declar_variables>
				|

<Cabecera_programa> ::= entero principal ()

<Inicio_de_bloque> ::= {

<Fin_de_bloque> ::= }

<Marca_ini_declar_variables> ::= ini_var_local

<Marca_fin_declar_variables> ::= fin_var_local

<Variables_locales> ::= <Variables_locales> <Cuerpo_declar_variables>
                | <Cuerpo_declar_variables>

<Cuerpo_declar_variables> ::= <tipo_basico> <lista_variables> ;

<Cabecera_subprograma> ::= <tipo_basico> <variable> ( <lista_parametros> )
        		| <tipo_basico> <variable> ( )

<Sentencias> ::= <Sentencias> <Sentencia>
                | <Sentencia>

<Sentencia> ::= <sentencia> <sentencia>
                | <bloque>
                | <sentencia_asignacion>
                | <sentencia_si>
                | <sentencia_mientras>
                | <sentencia_entrada>
                | <sentencia_salida>
                | <sentencia_devolver>
                | <sentencia_hacer_hasta>

<sentencia_asignacion> ::= <variable> = <expresion> ;

<sentencia_si> ::= si ( <expresion> ) <sentencia>
        		|  ( <expresion> ) <sentencia> else <bloque> ;

<sentencia_hacer_hasta> ::= hacer  <sentencia> hasta <expresion> ;

<sentencia_mientras> ::= mientras ( <expresion> ) <sentencia> ;

<sentencia_entrada> ::= <nomb_entrada> <lista_variables> ;

<sentencia_salida> ::= <nomb_salida> <lista_expresiones_o_cadena> ;

<sentencia_devolver> ::= devolver <expresion> ;

<expresion> ::= ( <expresion> )
                | <op_unario> <expresion>
                | <expresion> <op_binario> <expresion>
                | <identificador>
                | <constante>
                | <funcion>
                | <variable>

<tipo_basico> ::= entero
		        | booleano
		        | caracter
		        | flotante

<lista_variables> ::= <lista_variables> , <variable>
		        | <variable>

<identificador> ::= ([a-zA-Z_][0-9a-zA-z_]*)

<variable> ::= <identificador>
                | <identificador> [ <const_entero> ]
                | <identificador> [ <const_entero> ] [ <const_entero> ]

<lista_parametros> ::= <lista_parametros> , <tipo_basico> <variable>
        		| <tipo_basico> <variable>

<lista_entero> ::= <lista_entero> , <const_entero>
                | <const_entero>

<lista_booleano> ::= <lista_booleano> , <const_booleano>
                | <const_booleano>

<lista_flotante> ::= <lista_flotante> , <const_flotante>
                | <const_flotante>

<lista_caracter> ::= <lista_caracter> , <const_caracter>
                | <const_caracter>

<nomb_entrada> ::= leer

<nomb_salida> ::= escribir

<lista_expresiones_o_cadena> ::= <lista_expresiones_o_cadena> , <expresion>
		        | <lista_expresiones_o_cadena> , <cadena>
		        | <expresion>
		        | <cadena>

<cadena> ::= "cualquier conjunto de caracteres"

<op_unario> ::= &
		        | +
		        | -
		        | ~
		        | !

<op_binario> ::= +
		        | -
		        | *
		        | /
		        | ==
		        | !=
		        | <=
		        | >=
		        | <
		        | >
		        | &&
		        | ||

<signo> ::= -
                | +

<constante> ::= <const_entero>
		        | <const_matriz>
		        | <const_booleano>
		        | <const_flotante>
		        | <const_caracter>

<funcion> ::= <identificador> ( <lista_variables> ) ;
				| <identificador ( ) ;

<vector> ::= <tipo_basico> <identificador> [ <const_entero_sin_signo> ] ;
				| <tipo_basico> <identificador> [ <const_entero_sin_signo> , <const_entero_sin_signo> ] ;

<const_entero_sin_signo> ::= <const_entero_sin_signo> [0-9]
                | [0-9]

<const_entero> ::= <signo> <const_entero_sin_signo>

<const_matriz> ::=  <matriz_entero>
                | <matriz_booleano>
                | <matriz_flotante>
                | <matriz_caracter>

<matriz_entero> ::=  { <lista_entero> }

<matriz_booleano> ::=  { <lista_booleano> }

<matriz_flotante> ::=  { <lista_flotante> }

<matriz_caracter ::=  { <lista_caracter> }

<const_booleano> ::= true
				| false

<const_flotante> ::= <const_entero>.<const_entero_sin_signo>

<const_caracter> ::= [a-z]
				| [A-Z]
